{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Application API",
    "description": "Y Application API",
    "license": {
      "name": "Finchpayment",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Customers",
      "description": "API for customer in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "first_name": "first_name",
            "last_name": "last_name",
            "phone": "11111",
            "email": "email@email.com",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New customer is created",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get all Customers in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        }
      }
    },
    "/Customers/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Customers": {
      "required": [
        "email",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        }
      }
    },
    "Customers": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}